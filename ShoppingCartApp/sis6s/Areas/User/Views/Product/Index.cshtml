@model IEnumerable<sis6s.Models.Product>

@{
    ViewData["Title"] = "Products";
}

<style>
.product-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: none;
    border-radius: 10px;
    overflow: hidden;
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
}

.product-card .card-img-top {
    height: 200px;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-card:hover .card-img-top {
    transform: scale(1.05);
}

.product-card .card-body {
    padding: 1.5rem;
    background: #fff;
}

.product-card .card-title {
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: #2c3e50;
}

.product-card .card-text {
    font-size: 0.9rem;
    color: #7f8c8d;
    margin-bottom: 1rem;
}

.product-card .price {
    font-size: 1.2rem;
    color: #2ecc71;
    font-weight: bold;
}

.product-card .stock {
    font-size: 0.85rem;
}

.product-card .btn-outline-primary {
    border-radius: 20px;
    transition: all 0.3s ease;
}

.product-card .btn-outline-primary:hover {
    transform: translateY(-2px);
}

.rating {
    color: #f1c40f;
    margin-bottom: 0.5rem;
}

.discount-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background: #e74c3c;
    color: white;
    padding: 5px 10px;
    border-radius: 15px;
    font-size: 0.8rem;
    z-index: 1;
}

.filters-card {
    border-radius: 10px;
    box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.filters-card .card-header {
    background: #3498db;
    color: white;
    border-radius: 10px 10px 0 0;
    padding: 1rem;
}
</style>

<div class="container py-4">
    <div class="row">
        <!-- Sidebar with filters -->
        <div class="col-md-3">
            <div class="card mb-4 filters-card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-filter me-2"></i>Filters</h5>
                </div>
                <div class="card-body">
                    <form asp-action="Index" asp-controller="Product" asp-area="User" asp-route-page="1" method="get">
                        <div class="mb-3">
                            <label class="form-label">Search</label>
                            <input type="text" name="searchString" class="form-control" placeholder="Search products..." value="@ViewData["SearchString"]">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Category</label>
                            <select name="categoryId" class="form-select" asp-items="ViewBag.Categories">
                                <option value="">All Categories</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Price Range</label>
                            <div class="input-group">
                                <input type="number" name="minPrice" class="form-control" placeholder="Min" step="1000" value="@ViewData["MinPrice"]">
                                <span class="input-group-text">-</span>
                                <input type="number" name="maxPrice" class="form-control" placeholder="Max" step="1000" value="@ViewData["MaxPrice"]">
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Sort By</label>
                            <select name="sortBy" class="form-select">
                                <option value="name_asc" selected="@(ViewData["SortBy"]?.ToString() == "name_asc")">Name (A-Z)</option>
                                <option value="name_desc" selected="@(ViewData["SortBy"]?.ToString() == "name_desc")">Name (Z-A)</option>
                                <option value="price_asc" selected="@(ViewData["SortBy"]?.ToString() == "price_asc")">Price (Low-High)</option>
                                <option value="price_desc" selected="@(ViewData["SortBy"]?.ToString() == "price_desc")">Price (High-Low)</option>
                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-filter"></i> Apply Filters
                        </button>
                        <a href="@Url.Action("Index", new { page = 1 })" class="btn btn-outline-secondary w-100 mt-2">
                            <i class="fas fa-undo"></i> Reset Filters
                        </a>
                    </form>
                </div>
            </div>
        </div>

        <!-- Product list -->
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Products</h2>
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-secondary active" data-view="grid">
                        <i class="fas fa-th"></i>
                    </button>
                    <button type="button" class="btn btn-outline-secondary" data-view="list">
                        <i class="fas fa-list"></i>
                    </button>
                </div>
            </div>

            <div class="row" id="product-grid">
                @foreach (var item in Model)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card product-card h-100">
                            <div class="position-relative">
                                <img src="@item.Image" class="card-img-top" alt="@item.Name">
                                @if (item.Stock <= 5)
                                {
                                    <div class="position-absolute top-0 end-0 m-2">
                                        <span class="badge bg-danger">Low Stock</span>
                                    </div>
                                }
                                @if (item.Price > 100)
                                {
                                    <div class="discount-badge">
                                        <i class="fas fa-tag me-1"></i>-10%
                                    </div>
                                }
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@item.Name</h5>
                                <div class="rating">
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star-half-alt"></i>
                                    <small class="text-muted ms-2">(4.5)</small>
                                </div>
                                <p class="card-text text-muted">@item.Description</p>
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <span class="price">@item.Price.ToString("N0") ₫</span>
                                    <span class="stock"><i class="fas fa-box me-1"></i>In stock: @item.Stock</span>
                                </div>
                                <div class="mt-3">
                                    <a href="@Url.Action("Details", "Product", new { area = "User", id = item.Id })" class="btn btn-outline-primary w-100">
                                        <i class="fas fa-info-circle me-1"></i>View Details
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (ViewBag.TotalPages > 1)
            {
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle grid/list view toggle
        document.querySelectorAll('[data-view]').forEach(button => {
            button.addEventListener('click', function() {
                const view = this.dataset.view;
                const grid = document.getElementById('product-grid');
                
                // Update button states
                document.querySelectorAll('[data-view]').forEach(btn => {
                    btn.classList.remove('active');
                });
                this.classList.add('active');
                
                // Change grid class
                if (view === 'list') {
                    grid.classList.remove('row');
                    grid.classList.add('list-view');
                } else {
                    grid.classList.remove('list-view');
                    grid.classList.add('row');
                }
            });
        });
    </script>
}